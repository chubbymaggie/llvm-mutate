Manipulate LLVM assembly

This tool performs the following operations

    count | prints the total number of statements
     list | list instructions with their types and ids
      cut | deletes that numbered statement
   insert | copies the second numbered statement before the first
     swap | swaps the two numbered statements

Installation

  Copy this directory to llvm/lib/Transforms/Mutate in your llvm
  source tree, then run make from within the Mutate directory.  See
  http://llvm.org/docs/WritingAnLLVMPass.html for more information.

Examples

  First compile a source file to LLVM assembly.

    $ echo 'main(){ puts("hello"); puts("goodbye");}' \
        |clang -x c - -S -emit-llvm -o greet.ll

  See the behavior of the original.

    $ cat greet.ll|llc|gcc -x assembler - -o greet

    $ ./greet
    hello
    goodbye

  Count the statements in the original program.

    $ opt -load ${LLVM}/Debug+Asserts/lib/Mutate.so \
        -count greet.ll -o /dev/null
    3

  Cut the first statement from this program, compile and run.

    $ opt -load ${LLVM}/Debug+Asserts/lib/Mutate.so \
        -cut -stmt1=1 greet.ll -o cut.bl
    cut 1

    $ cat cut.bl|llc|gcc -x assembler - -o cut

    $ ./cut
    goodbye

  Insert the second statement before the first.

    $ opt -load ${LLVM}/Debug+Asserts/lib/Mutate.so \
      -insert -stmt1=1 -stmt2=2 greet.ll -o insert.bl
    inserted 2 before 1

    $ cat insert.bl|llc|gcc -x assembler - -o insert

    $ ./insert
    goodbye
    hello
    goodbye

  Swap the first two statements.

    $ opt -load ${LLVM}/Debug+Asserts/lib/Mutate.so \
      -swap -stmt1=1 -stmt2=2 greet.ll -o swap.bl
    swapped 1 with 2

    $ cat swap.bl|llc|gcc -x assembler - -o swap

    $ ./swap
    goodbye
    hello

License

  Licensed under the GPLV3, see the COPYING file in this directory for
  more information.
